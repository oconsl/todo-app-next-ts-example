{
  "src": {
    "app": {
      "(todo)": {
        "task": {
          "[id]": {
            "page.tsx": "import { TodoDetailsView } from '@/sections/todo'\n\ninterface TaskPageProps {\n  params: {\n    id: string\n  }\n}\n\nexport default async function TaskPage ({ params }: TaskPageProps) {\n  const { id } = await params\n\n  return (\n    <TodoDetailsView taskId={id} />\n  )\n}\n"
          },
          "page.tsx": "import { TodoListView } from '@/sections/todo'\n\nexport default function TaskListPage () {\n  return (\n    <TodoListView />\n  )\n}\n"
        }
      },
      "layout.tsx": "import type { Metadata } from \"next\"\nimport localFont from \"next/font/local\"\nimport \"./globals.css\"\n\nconst geistSans = localFont({\n  src: \"./fonts/GeistVF.woff\",\n  variable: \"--font-geist-sans\",\n  weight: \"100 900\",\n})\nconst geistMono = localFont({\n  src: \"./fonts/GeistMonoVF.woff\",\n  variable: \"--font-geist-mono\",\n  weight: \"100 900\",\n})\n\nexport const metadata: Metadata = {\n  title: \"Simple & Modern To-Do App\",\n  description: \"A minimalist and elegant To-Do app for managing your daily tasks.\",\n}\n\nexport default function RootLayout ({\n  children,\n}: Readonly<{\n  children: React.ReactNode\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        {children}\n      </body>\n    </html>\n  )\n}\n",
      "page.tsx": "import { HomeView } from '@/sections/landing'\n\nexport default function Home () {\n  return (\n    <HomeView />\n  )\n}\n"
    },
    "components": {
      "todo": {
        "index.ts": "export { default as Todo } from './todo';\nexport { default as TodoForm } from './todo-form';\n",
        "todo-form.tsx": "\"use client\"\n\nimport { useState } from 'react'\nimport type { FormTodo } from '@/types/todo'\n\ninterface TodoFormProps {\n  onAddTask: ({ description, priority }: FormTodo) => void\n}\n\nexport default function TodoForm ({ onAddTask }: TodoFormProps) {\n  const [newTask, setNewTask] = useState('')\n  const [priority, setPriority] = useState(1)\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    if (newTask.trim()) {\n      onAddTask({ description: newTask, priority })\n      setNewTask('')\n      setPriority(1)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-6 bg-gray-800 p-4 rounded-xl shadow-lg\">\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)}\n        placeholder=\"Nueva tarea...\"\n        className=\"w-full p-2 mb-3 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-2 focus:ring-purple-500\"\n      />\n\n      <div className=\"flex items-center mb-3\">\n        <span className=\"mr-3 text-sm text-gray-300\">Prioridad:</span>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"5\"\n          value={priority}\n          onChange={(e) => setPriority(Number(e.target.value))}\n          className=\"w-full h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\n        />\n        <span className=\"ml-3 text-sm text-gray-300\">{priority}</span>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full py-2 px-4 bg-purple-600 hover:bg-purple-700 rounded-lg text-white font-semibold transition duration-300 shadow-md hover:shadow-lg\"\n      >\n        Agregar Tarea\n      </button>\n    </form>\n  )\n}",
        "todo.tsx": "import Link from 'next/link'\nimport type { Todo } from '@/types/todo'\n\ninterface TodoProps {\n  task: Todo\n}\n\nexport default function Todo ({ task }: TodoProps) {\n  return (\n    <Link href={`/task/${task.id}`} className=\"block\">\n      <li className=\"p-3 bg-gray-800 rounded-lg flex justify-between items-center shadow-md hover:shadow-lg transition duration-300 cursor-pointer\">\n        <span className=\"text-white\">{task.description}</span>\n        <span className=\"px-2 py-1 bg-purple-600 rounded-full text-xs font-medium text-white shadow\">\n          Prioridad: {task.priority}\n        </span>\n      </li>\n    </Link>\n  )\n}"
      }
    },
    "sections": {
      "landing": {
        "home-view.tsx": "import Link from 'next/link'\n\nexport default function HomeView () {\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-4 sm:p-6 md:p-8 flex items-center justify-center\">\n      <div className=\"max-w-2xl w-full text-center\">\n        <h1 className=\"text-4xl sm:text-5xl md:text-6xl font-bold mb-6 text-purple-400\">\n          Gestiona Tus Tareas\n        </h1>\n\n        <p className=\"text-lg sm:text-xl md:text-2xl mb-8 text-gray-300\">\n          Una aplicación minimalista y elegante para organizar tus tareas diarias.\n          Prioriza, gestiona y mantén el control de tus actividades con facilidad.\n        </p>\n\n        <Link href=\"/task\" className=\"inline-block\">\n          <span className=\"relative inline-flex items-center justify-center px-6 py-3 overflow-hidden font-bold text-white rounded-lg group\">\n            <span className=\"absolute inset-0 w-full h-full transition duration-300 ease-out opacity-0 bg-gradient-to-br from-pink-600 via-purple-700 to-blue-400 group-hover:opacity-100\"></span>\n            <span className=\"absolute top-0 left-0 w-full bg-gradient-to-b from-white to-transparent opacity-5 h-1/3\"></span>\n            <span className=\"absolute bottom-0 left-0 w-full h-1/3 bg-gradient-to-t from-white to-transparent opacity-5\"></span>\n            <span className=\"relative flex items-center\">\n              Comenzar\n              <svg\n                className=\"w-5 h-5 ml-2\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M13 7l5 5m0 0l-5 5m5-5H6\"\n                ></path>\n              </svg>\n            </span>\n          </span>\n        </Link>\n      </div>\n    </div>\n  )\n}",
        "index.ts": "export { default as HomeView } from './home-view';\n"
      },
      "todo": {
        "details-view.tsx": "'use client'\n\nimport Link from 'next/link'\nimport { useLocalStorage } from 'usehooks-ts'\nimport type { Todo } from '@/types/todo'\n\ninterface TodoDetailsViewProps {\n  taskId: string\n}\n\nexport default function TodoDetailsView ({ taskId }: TodoDetailsViewProps) {\n  const [tasks] = useLocalStorage<Todo[]>('tasks', [])\n\n  const task = tasks?.find((task) => task.id === taskId)\n\n  if (!task) {\n    return <div>Tarea no encontrada</div>\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-4 sm:p-6 md:p-8 flex items-center justify-center\">\n      <div className=\"max-w-md w-full bg-gray-800 rounded-xl shadow-2xl p-6\">\n        <h1 className=\"text-3xl font-bold mb-6 text-center text-purple-400\">Detalles de la Tarea</h1>\n\n        <div className=\"bg-gray-700 rounded-lg p-4 mb-4\">\n          <h2 className=\"text-xl font-semibold mb-2\">{task.description}</h2>\n          <p className=\"text-gray-300\">Prioridad: {task.priority}</p>\n        </div>\n\n        <Link href=\"/task\">\n          <button className=\"w-full py-2 px-4 bg-purple-600 hover:bg-purple-700 rounded-lg text-white font-semibold transition duration-300 shadow-md hover:shadow-lg\">\n            Volver a la lista\n          </button>\n        </Link>\n      </div>\n    </div>\n  )\n}",
        "index.ts": "export { default as TodoListView } from './list-view';\nexport { default as TodoDetailsView } from './details-view';\n",
        "list-view.tsx": "'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useLocalStorage } from 'usehooks-ts'\nimport { Todo as TodoComponent, TodoForm } from '@/components/todo'\nimport type { Todo, FormTodo } from '@/types/todo'\n\nexport default function TodoListView () {\n  const [storedTasks, setStoredTasks] = useLocalStorage<Todo[]>('tasks', [])\n  const [tasks, setTasks] = useState<Todo[]>([])\n\n  const addTask = (newTask: FormTodo) => {\n    const newTaskId = Date.now().toString()\n    const newTodo: Todo = {\n      id: newTaskId,\n      ...newTask,\n      done: false,\n    }\n\n    setTasks([...tasks, newTodo])\n    setStoredTasks([...storedTasks, newTodo])\n  }\n\n  useEffect(() => {\n    setTasks(storedTasks)\n  }, [storedTasks])\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-4 sm:p-6 md:p-8 flex items-center justify-center\">\n      <div className=\"max-w-md w-full bg-gray-800 rounded-xl shadow-2xl p-6\">\n        <h1 className=\"text-3xl font-bold mb-6 text-center text-purple-400\">Lista de Tareas</h1>\n\n        <TodoForm onAddTask={addTask} />\n\n        <ul className=\"space-y-2\">\n          {tasks.map((task) => (\n            <TodoComponent key={task.id} task={task} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}"
      }
    },
    "types": {
      "todo": {
        "index.ts": "export interface Todo {\n  id: string;\n  description: string;\n  priority: number;\n  done: boolean;\n}\n\nexport type FormTodo = Pick<Todo, 'description' | 'priority'>;\n"
      }
    }
  }
}